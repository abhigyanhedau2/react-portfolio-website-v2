{"ast":null,"code":"import React,{useEffect}from'react';import'./SkillLoader.css';import{jsx as _jsx}from\"react/jsx-runtime\";var SkillLoader=function SkillLoader(props){useEffect(function(){var observer=new IntersectionObserver(function(entries){entries.forEach(function(entry){var count=0;var fill=entry.target.querySelector('.loader-fill');if(entry.isIntersecting&&!count){fill.classList.add('fill');return;// if we added the class, exit the function\n}// We're not intersecting, so remove the class!\n// Will only not remove the class if it is once triggered\nif(count)fill.classList.remove('fill');// Will remove the class and add it again\n// fill.classList.remove('fill');\n});});var loaders=Array.from(document.querySelectorAll('.loader-wrapper'));loaders.forEach(function(loader){observer.observe(loader);});},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"loader-wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loader-fill\",style:{'--value':\"\".concat(props.value)}})});};export default SkillLoader;","map":{"version":3,"names":["React","useEffect","SkillLoader","props","observer","IntersectionObserver","entries","forEach","entry","count","fill","target","querySelector","isIntersecting","classList","add","remove","loaders","Array","from","document","querySelectorAll","loader","observe","value"],"sources":["E:/Projects/react-portfolio-website-v2/src/components/Skills/SkillLoader.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport './SkillLoader.css';\r\n\r\nconst SkillLoader = (props) => {\r\n\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(entries => {\r\n            entries.forEach(entry => {\r\n                const count = 0;\r\n                const fill = entry.target.querySelector('.loader-fill');\r\n\r\n                if (entry.isIntersecting && !count) {\r\n                    fill.classList.add('fill');\r\n                    return; // if we added the class, exit the function\r\n                }\r\n\r\n                // We're not intersecting, so remove the class!\r\n                // Will only not remove the class if it is once triggered\r\n                if (count)\r\n                    fill.classList.remove('fill');\r\n\r\n                // Will remove the class and add it again\r\n                // fill.classList.remove('fill');\r\n            });\r\n        });\r\n\r\n        const loaders = Array.from(document.querySelectorAll('.loader-wrapper'));\r\n\r\n        loaders.forEach(loader => {\r\n            observer.observe(loader);\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"loader-wrapper\">\r\n            <div className=\"loader-fill\" style={{ '--value': `${props.value}` }}></div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default SkillLoader"],"mappings":"AAAA,MAAOA,MAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,mBAAP,C,2CAEA,GAAMC,YAAW,CAAG,QAAdA,YAAc,CAACC,KAAD,CAAW,CAE3BF,SAAS,CAAC,UAAM,CACZ,GAAMG,SAAQ,CAAG,GAAIC,qBAAJ,CAAyB,SAAAC,OAAO,CAAI,CACjDA,OAAO,CAACC,OAAR,CAAgB,SAAAC,KAAK,CAAI,CACrB,GAAMC,MAAK,CAAG,CAAd,CACA,GAAMC,KAAI,CAAGF,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2B,cAA3B,CAAb,CAEA,GAAIJ,KAAK,CAACK,cAAN,EAAwB,CAACJ,KAA7B,CAAoC,CAChCC,IAAI,CAACI,SAAL,CAAeC,GAAf,CAAmB,MAAnB,EACA,OAAQ;AACX,CAED;AACA;AACA,GAAIN,KAAJ,CACIC,IAAI,CAACI,SAAL,CAAeE,MAAf,CAAsB,MAAtB,EAEJ;AACA;AACH,CAhBD,EAiBH,CAlBgB,CAAjB,CAoBA,GAAMC,QAAO,CAAGC,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,gBAAT,CAA0B,iBAA1B,CAAX,CAAhB,CAEAJ,OAAO,CAACV,OAAR,CAAgB,SAAAe,MAAM,CAAI,CACtBlB,QAAQ,CAACmB,OAAT,CAAiBD,MAAjB,EACH,CAFD,EAIH,CA3BQ,CA2BN,EA3BM,CAAT,CA8BA,mBACI,YAAK,SAAS,CAAC,gBAAf,uBACI,YAAK,SAAS,CAAC,aAAf,CAA6B,KAAK,CAAE,CAAE,oBAAcnB,KAAK,CAACqB,KAApB,CAAF,CAApC,EADJ,EADJ,CAKH,CArCD,CAuCA,cAAetB,YAAf"},"metadata":{},"sourceType":"module"}